 # Copyright 2024 CS Group
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #     http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.

apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    dashboards: "grafana"
spec:
  config:
    paths:
      data: /var/lib/grafana/
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    analytics:
      check_for_updates: "true"
    log:
      mode: console
    grafana_net:
      url: https://grafana.net
    server:
      domain: monitoring.{{ platform_domain_name }}
      root_url: https://monitoring.{{ platform_domain_name }}
    auth:
      oauth_auto_login: "true"
      disable_login_form: "true"
      signout_redirect_url: https://iam.{{ platform_domain_name }}/realms/rspy/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fmonitoring.{{ platform_domain_name }}%2F
    auth.generic_oauth:
      enabled: "true"
      allow_sign_up: "true"
      client_id: grafana
      client_secret: ${GRAFANA_CLIENT_SECRET}
      scopes: "openid profile email"
      auth_url: https://iam.{{ platform_domain_name }}/realms/rspy/protocol/openid-connect/auth
      token_url: https://iam.{{ platform_domain_name }}/realms/rspy/protocol/openid-connect/token
      api_url: https://iam.{{ platform_domain_name }}/realms/rspy/protocol/openid-connect/userinfo
      role_attribute_path: contains(roles[*], 'admin') && 'GrafanaAdmin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'
      role_attribute_strict: "true"
      oauth_allow_insecure_email_lookup: "true"
    plugins:
      plugin_admin_enabled: "true"
      allow_loading_unsigned_plugins: "{{ grafana.custom_plugins | map(attribute='name') | join(',') }}"
    rendering:
      server_url: http://grafana-image-renderer.{{ kustomization.namespace }}.svc.cluster.local:8081/render
      callback_url: http://grafana-service.{{ kustomization.namespace }}.svc.cluster.local:3000/
    metrics:
      enabled: "true"
    smtp: {{ grafana.smtp }}
    unified_alerting:
      enabled: "true"
  ingress:
    spec:
      ingressClassName: nginx
      rules:
        - host: monitoring.{{ platform_domain_name }}
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - monitoring.{{ platform_domain_name }}
          secretName: monitoring-{{ platform_domain_name | replace(".", "-") }}
  deployment:
    spec:
      template:
        spec:
          containers:
            - name: grafana
              image: grafana/grafana:10.0.4
              resources:
                limits:
                  cpu: 500m
                  memory: 1024Mi
                requests:
                  cpu: 200m
                  memory: 256Mi
              envFrom:
                - secretRef:
                    name: grafana-credentials
              env:
                - name: GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE
                  value: "true"
                - name: GF_UNIFIED_ALERTING_SCREENSHOTS_UPLOAD_EXTERNAL_IMAGE_STORAGE
                  value: "false"
                - name: GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN
                  value: "true"
                - name: GF_AUTH_OAUTH_ALLOW_INSECURE_EMAIL_LOOKUP
                  value: "true"
                - name: GF_INSTALL_PLUGINS
                  value: "{%- for item in grafana.custom_plugins -%}{{ item.url }};{{ item.name }},{%- endfor -%}"
              volumeMounts:
              - name: grafana-data
                mountPath: /var/lib/grafana
          securityContext:
            fsGroup: 104
          volumes:
          - name: grafana-data
            persistentVolumeClaim:
              claimName: grafana-pvc
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                    - key: "node-role.kubernetes.io/infra"
                      operator: Exists

  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: csi-cinder-high-speed-retain
      resources:
        requests:
          storage: 10Gi
